(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{517:function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(540)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTE3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1vdGlvbi9ub2RlX21vZHVsZXMvcGVyZm9ybWFuY2Utbm93L2xpYi9wZXJmb3JtYW5jZS1ub3cuanM/NGVlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuNy4xXG4oZnVuY3Rpb24oKSB7XG4gIHZhciBnZXROYW5vU2Vjb25kcywgaHJ0aW1lLCBsb2FkVGltZTtcblxuICBpZiAoKHR5cGVvZiBwZXJmb3JtYW5jZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBwZXJmb3JtYW5jZSAhPT0gbnVsbCkgJiYgcGVyZm9ybWFuY2Uubm93KSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICB9O1xuICB9IGVsc2UgaWYgKCh0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBwcm9jZXNzICE9PSBudWxsKSAmJiBwcm9jZXNzLmhydGltZSkge1xuICAgIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gKGdldE5hbm9TZWNvbmRzKCkgLSBsb2FkVGltZSkgLyAxZTY7XG4gICAgfTtcbiAgICBocnRpbWUgPSBwcm9jZXNzLmhydGltZTtcbiAgICBnZXROYW5vU2Vjb25kcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGhyO1xuICAgICAgaHIgPSBocnRpbWUoKTtcbiAgICAgIHJldHVybiBoclswXSAqIDFlOSArIGhyWzFdO1xuICAgIH07XG4gICAgbG9hZFRpbWUgPSBnZXROYW5vU2Vjb25kcygpO1xuICB9IGVsc2UgaWYgKERhdGUubm93KSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBEYXRlLm5vdygpIC0gbG9hZFRpbWU7XG4gICAgfTtcbiAgICBsb2FkVGltZSA9IERhdGUubm93KCk7XG4gIH0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIGxvYWRUaW1lO1xuICAgIH07XG4gICAgbG9hZFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgfVxuXG59KS5jYWxsKHRoaXMpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///517\n')},686:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Photo\", function() { return Photo; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(552);\n\n\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar imgWithClick = {\n  cursor: 'pointer'\n};\n\nvar Photo = function Photo(_ref) {\n  var index = _ref.index,\n      onClick = _ref.onClick,\n      photo = _ref.photo,\n      margin = _ref.margin,\n      direction = _ref.direction,\n      top = _ref.top,\n      left = _ref.left,\n      key = _ref.key;\n  var imgStyle = {\n    margin: margin,\n    display: 'block'\n  };\n\n  if (direction === 'column') {\n    imgStyle.position = 'absolute';\n    imgStyle.left = left;\n    imgStyle.top = top;\n  }\n\n  var handleClick = function handleClick(event) {\n    onClick(event, {\n      photo: photo,\n      index: index\n    });\n  };\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"img\", _extends({\n    key: key,\n    style: onClick ? _objectSpread({}, imgStyle, imgWithClick) : imgStyle\n  }, photo, {\n    onClick: onClick ? handleClick : null\n  }));\n};\n\nvar photoPropType = prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.shape({\n  key: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  src: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,\n  width: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,\n  height: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,\n  alt: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  title: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  srcSet: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array]),\n  sizes: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array])\n});\nPhoto.propTypes = {\n  index: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,\n  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\n  photo: photoPropType.isRequired,\n  margin: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,\n  top: function top(props) {\n    if (props.direction === 'column' && typeof props.top !== 'number') {\n      return new Error('top is a required number when direction is set to `column`');\n    }\n  },\n  left: function left(props) {\n    if (props.direction === 'column' && typeof props.left !== 'number') {\n      return new Error('left is a required number when direction is set to `column`');\n    }\n  },\n  direction: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string\n};\n\nvar round = function round(value, decimals) {\n  if (!decimals) decimals = 0;\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n};\n\nvar computeColumnLayout = function computeColumnLayout(_ref) {\n  var photos = _ref.photos,\n      columns = _ref.columns,\n      containerWidth = _ref.containerWidth,\n      margin = _ref.margin;\n  // calculate each colWidth based on total width and column amount\n  var colWidth = (containerWidth - margin * 2 * columns) / columns; // map through each photo to assign adjusted height and width based on colWidth\n\n  var photosWithSizes = photos.map(function (photo) {\n    var newHeight = photo.height / photo.width * colWidth;\n    return _objectSpread({}, photo, {\n      width: round(colWidth, 1),\n      height: round(newHeight, 1)\n    });\n  }); // store all possible left positions\n  // and current top positions for each column\n\n  var colLeftPositions = [];\n  var colCurrTopPositions = [];\n\n  for (var i = 0; i < columns; i++) {\n    colLeftPositions[i] = round(i * (colWidth + margin * 2), 1);\n    colCurrTopPositions[i] = 0;\n  } // map through each photo, then reduce thru each \"column\"\n  // find column with the smallest height and assign to photo's 'top'\n  // update that column's height with this photo's height\n\n\n  var photosPositioned = photosWithSizes.map(function (photo) {\n    var smallestCol = colCurrTopPositions.reduce(function (acc, item, i) {\n      acc = item < colCurrTopPositions[acc] ? i : acc;\n      return acc;\n    }, 0);\n    photo.top = colCurrTopPositions[smallestCol];\n    photo.left = colLeftPositions[smallestCol];\n    colCurrTopPositions[smallestCol] = colCurrTopPositions[smallestCol] + photo.height + margin * 2; // store the tallest col to use for gallery height because of abs positioned elements\n\n    var tallestCol = colCurrTopPositions.reduce(function (acc, item, i) {\n      acc = item > colCurrTopPositions[acc] ? i : acc;\n      return acc;\n    }, 0);\n    photo.containerHeight = colCurrTopPositions[tallestCol];\n    return photo;\n  });\n  return photosPositioned;\n};\n\nvar ratio = function ratio(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  return round(width / height, 2);\n};\n\n/*\nCopyright 2007-2013 Marijn Haverbeke frin \"Eloquent Javascript, 1st Edition\"\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\nfunction BinaryHeap(scoreFunction) {\n  this.content = [];\n  this.scoreFunction = scoreFunction;\n}\nBinaryHeap.prototype = {\n  push: function push(element) {\n    // Add the new element to the end of the array.\n    this.content.push(element); // Allow it to bubble up.\n\n    this.bubbleUp(this.content.length - 1);\n  },\n  pop: function pop() {\n    // Store the first element so we can return it later.\n    var result = this.content[0]; // Get the element at the end of the array.\n\n    var end = this.content.pop(); // If there are any elements left, put the end element at the\n    // start, and let it sink down.\n\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.sinkDown(0);\n    }\n\n    return result;\n  },\n  remove: function remove(node) {\n    var length = this.content.length; // To remove a value, we must search through the array to find\n    // it.\n\n    for (var i = 0; i < length; i++) {\n      if (this.content[i] != node) continue; // When it is found, the process seen in 'pop' is repeated\n      // to fill up the hole.\n\n      var end = this.content.pop(); // If the element we popped was the one we needed to remove,\n      // we're done.\n\n      if (i == length - 1) break; // Otherwise, we replace the removed element with the popped\n      // one, and allow it to float up or sink down as appropriate.\n\n      this.content[i] = end;\n      this.bubbleUp(i);\n      this.sinkDown(i);\n      break;\n    }\n  },\n  size: function size() {\n    return this.content.length;\n  },\n  bubbleUp: function bubbleUp(n) {\n    // Fetch the element that has to be moved.\n    var element = this.content[n],\n        score = this.scoreFunction(element); // When at 0, an element can not go up any further.\n\n    while (n > 0) {\n      // Compute the parent element's index, and fetch it.\n      var parentN = Math.floor((n + 1) / 2) - 1,\n          parent = this.content[parentN]; // If the parent has a lesser score, things are in order and we\n      // are done.\n\n      if (score >= this.scoreFunction(parent)) break; // Otherwise, swap the parent with the current element and\n      // continue.\n\n      this.content[parentN] = element;\n      this.content[n] = parent;\n      n = parentN;\n    }\n  },\n  sinkDown: function sinkDown(n) {\n    // Look up the target element and its score.\n    var length = this.content.length,\n        element = this.content[n],\n        elemScore = this.scoreFunction(element);\n\n    while (true) {\n      // Compute the indices of the child elements.\n      var child2N = (n + 1) * 2,\n          child1N = child2N - 1; // This is used to store the new position of the element,\n      // if any.\n\n      var swap = null; // If the first child exists (is inside the array)...\n\n      if (child1N < length) {\n        // Look it up and compute its score.\n        var child1 = this.content[child1N],\n            child1Score = this.scoreFunction(child1); // If the score is less than our element's, we need to swap.\n\n        if (child1Score < elemScore) swap = child1N;\n      } // Do the same checks for the other child.\n\n\n      if (child2N < length) {\n        var child2 = this.content[child2N],\n            child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap == null ? elemScore : child1Score)) swap = child2N;\n      } // No need to swap further, we are done.\n\n\n      if (swap == null) break; // Otherwise, swap and continue.\n\n      this.content[n] = this.content[swap];\n      this.content[swap] = element;\n      n = swap;\n    }\n  }\n};\n\nvar buildPrecedentsMap = function buildPrecedentsMap(graph, startNode, endNode) {\n  // store the previous vertex of the shortest path of arrival\n  var precedentsMap = {}; // store nodes already visited\n\n  var visited = {}; // store/update only the shortest edge weights measured\n  // the purpose of this is object is constant time lookup vs. binary heap lookup O(n)\n\n  var storedShortestPaths = {};\n  storedShortestPaths[startNode] = 0; // priority queue of ALL nodes and storedShortestPaths\n  // don't bother to delete them because it's faster to look at visited?\n\n  var pQueue = new BinaryHeap(function (n) {\n    return n.weight;\n  });\n  pQueue.push({\n    id: startNode,\n    weight: 0\n  });\n\n  while (pQueue.size()) {\n    // pop node with shortest total weight from start node\n    var shortestNode = pQueue.pop();\n    var shortestNodeId = shortestNode.id; // if already visited, continue\n\n    if (visited[shortestNodeId]) continue; // visit neighboring nodes\n\n    var neighboringNodes = graph(shortestNodeId) || {};\n    visited[shortestNodeId] = 1; // meet the neighbors, looking for shorter paths\n\n    for (var neighbor in neighboringNodes) {\n      // weight of path from startNode to this neighbor\n      var newTotalWeight = shortestNode.weight + neighboringNodes[neighbor]; // if this is the first time meeting the neighbor OR if the new total weight from\n      // start node to this neighbor node is greater than the old weight path, update it,\n      // and update precedent node\n\n      if (typeof storedShortestPaths[neighbor] === 'undefined' || storedShortestPaths[neighbor] > newTotalWeight) {\n        storedShortestPaths[neighbor] = newTotalWeight;\n        pQueue.push({\n          id: neighbor,\n          weight: newTotalWeight\n        });\n        precedentsMap[neighbor] = shortestNodeId;\n      }\n    }\n  }\n\n  if (typeof storedShortestPaths[endNode] === 'undefined') {\n    throw new Error(\"There is no path from \".concat(startNode, \" to \").concat(endNode));\n  }\n\n  return precedentsMap;\n}; // build the route from precedent node vertices\n\n\nvar getPathFromPrecedentsMap = function getPathFromPrecedentsMap(precedentsMap, endNode) {\n  var nodes = [];\n  var n = endNode;\n  var precedent;\n\n  while (n) {\n    nodes.push(n);\n    precedent = precedentsMap[n];\n    n = precedentsMap[n];\n  }\n\n  return nodes.reverse();\n}; // build the precedentsMap and find the shortest path from it\n\n\nvar findShortestPath = function findShortestPath(graph, startNode, endNode) {\n  var precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n  return getPathFromPrecedentsMap(precedentsMap, endNode);\n};\n\n// to calculate the single best layout using Dijkstra's findShortestPat\n// get the height for a set of photos in a potential row\n\nvar getCommonHeight = function getCommonHeight(row, containerWidth, margin) {\n  var rowWidth = containerWidth - row.length * (margin * 2);\n  var totalAspectRatio = row.reduce(function (acc, photo) {\n    return acc + ratio(photo);\n  }, 0);\n  return rowWidth / totalAspectRatio;\n}; // calculate the cost of breaking at this node (edge weight)\n\n\nvar cost = function cost(photos, i, j, width, targetHeight, margin) {\n  var row = photos.slice(i, j);\n  var commonHeight = getCommonHeight(row, width, margin);\n  return Math.pow(Math.abs(commonHeight - targetHeight), 2);\n}; // return function that gets the neighboring nodes of node and returns costs\n\n\nvar makeGetNeighbors = function makeGetNeighbors(targetHeight, containerWidth, photos, limitNodeSearch, margin) {\n  return function (start) {\n    var results = {};\n    start = +start;\n    results[+start] = 0;\n\n    for (var i = start + 1; i < photos.length + 1; ++i) {\n      if (i - start > limitNodeSearch) break;\n      results[i.toString()] = cost(photos, start, i, containerWidth, targetHeight, margin);\n    }\n\n    return results;\n  };\n};\n\nvar computeRowLayout = function computeRowLayout(_ref) {\n  var containerWidth = _ref.containerWidth,\n      limitNodeSearch = _ref.limitNodeSearch,\n      targetRowHeight = _ref.targetRowHeight,\n      margin = _ref.margin,\n      photos = _ref.photos;\n  // const t = +new Date();\n  var getNeighbors = makeGetNeighbors(targetRowHeight, containerWidth, photos, limitNodeSearch, margin);\n  var path = findShortestPath(getNeighbors, '0', photos.length);\n  path = path.map(function (node) {\n    return +node;\n  }); // console.log(`time to find the shortest path: ${(+new Date() - t)} ms`);\n\n  for (var i = 1; i < path.length; ++i) {\n    var row = photos.slice(path[i - 1], path[i]);\n    var height = getCommonHeight(row, containerWidth, margin);\n\n    for (var j = path[i - 1]; j < path[i]; ++j) {\n      photos[j].width = round(height * ratio(photos[j]), 1);\n      photos[j].height = height;\n    }\n  }\n\n  return photos;\n};\n\n// the aspect ratio of the container with images having an avg AR of 1.5\n// as the minimum amount of photos per row, plus some nodes\n\nvar findIdealNodeSearch = function findIdealNodeSearch(_ref) {\n  var targetRowHeight = _ref.targetRowHeight,\n      containerWidth = _ref.containerWidth;\n  var rowAR = containerWidth / targetRowHeight;\n  return round(rowAR / 1.5) + 8;\n};\n\nvar Gallery = react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(function Gallery(_ref) {\n  var photos = _ref.photos,\n      onClick = _ref.onClick,\n      direction = _ref.direction,\n      margin = _ref.margin,\n      limitNodeSearch = _ref.limitNodeSearch,\n      targetRowHeight = _ref.targetRowHeight,\n      columns = _ref.columns,\n      renderImage = _ref.renderImage;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      containerWidth = _useState2[0],\n      setContainerWidth = _useState2[1];\n\n  var galleryEl = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(null);\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useLayoutEffect\"])(function () {\n    var animationFrameID = null;\n    var observer = new resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_2__[/* default */ \"a\"](function (entries) {\n      // only do something if width changes\n      var newWidth = entries[0].contentRect.width;\n\n      if (containerWidth !== newWidth) {\n        // put in an animation frame to stop \"benign errors\" from\n        // ResizObserver https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded\n        animationFrameID = window.requestAnimationFrame(function () {\n          setContainerWidth(Math.floor(newWidth));\n        });\n      }\n    });\n    observer.observe(galleryEl.current);\n    return function () {\n      observer.disconnect();\n      window.cancelAnimationFrame(animationFrameID);\n    };\n  });\n\n  var handleClick = function handleClick(event, _ref2) {\n    var index = _ref2.index;\n    onClick(event, {\n      index: index,\n      photo: photos[index],\n      previous: photos[index - 1] || null,\n      next: photos[index + 1] || null\n    });\n  }; // no containerWidth until after first render with refs, skip calculations and render nothing\n\n\n  if (!containerWidth) return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    ref: galleryEl\n  }, \"\\xA0\"); // subtract 1 pixel because the browser may round up a pixel\n\n  var width = containerWidth - 1;\n  var galleryStyle, thumbs;\n\n  if (direction === 'row') {\n    // allow user to calculate limitNodeSearch from containerWidth\n    if (typeof limitNodeSearch === 'function') {\n      limitNodeSearch = limitNodeSearch(containerWidth);\n    }\n\n    if (typeof targetRowHeight === 'function') {\n      targetRowHeight = targetRowHeight(containerWidth);\n    } // set how many neighboring nodes the graph will visit\n\n\n    if (limitNodeSearch === undefined) {\n      limitNodeSearch = 2;\n\n      if (containerWidth >= 450) {\n        limitNodeSearch = findIdealNodeSearch({\n          containerWidth: containerWidth,\n          targetRowHeight: targetRowHeight\n        });\n      }\n    }\n\n    galleryStyle = {\n      display: 'flex',\n      flexWrap: 'wrap',\n      flexDirection: 'row'\n    };\n    thumbs = computeRowLayout({\n      containerWidth: width,\n      limitNodeSearch: limitNodeSearch,\n      targetRowHeight: targetRowHeight,\n      margin: margin,\n      photos: photos\n    });\n  }\n\n  if (direction === 'column') {\n    // allow user to calculate columns from containerWidth\n    if (typeof columns === 'function') {\n      columns = columns(containerWidth);\n    } // set default breakpoints if user doesn't specify columns prop\n\n\n    if (columns === undefined) {\n      columns = 1;\n      if (containerWidth >= 500) columns = 2;\n      if (containerWidth >= 900) columns = 3;\n      if (containerWidth >= 1500) columns = 4;\n    }\n\n    galleryStyle = {\n      position: 'relative'\n    };\n    thumbs = computeColumnLayout({\n      containerWidth: width,\n      columns: columns,\n      margin: margin,\n      photos: photos\n    });\n    galleryStyle.height = thumbs[thumbs.length - 1].containerHeight;\n  }\n\n  var renderComponent = renderImage || Photo;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"react-photo-gallery--gallery\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    ref: galleryEl,\n    style: galleryStyle\n  }, thumbs.map(function (thumb, index) {\n    var left = thumb.left,\n        top = thumb.top,\n        containerHeight = thumb.containerHeight,\n        photo = _objectWithoutProperties(thumb, [\"left\", \"top\", \"containerHeight\"]);\n\n    return renderComponent({\n      left: left,\n      top: top,\n      key: thumb.key || thumb.src,\n      containerHeight: containerHeight,\n      index: index,\n      margin: margin,\n      direction: direction,\n      onClick: onClick ? handleClick : null,\n      photo: photo\n    });\n  })));\n});\nGallery.propTypes = {\n  photos: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(photoPropType).isRequired,\n  direction: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\n  columns: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number]),\n  targetRowHeight: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number]),\n  limitNodeSearch: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number]),\n  margin: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,\n  renderImage: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func\n};\nGallery.defaultProps = {\n  margin: 2,\n  direction: 'row',\n  targetRowHeight: 300\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Gallery);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///686\n")}}]);