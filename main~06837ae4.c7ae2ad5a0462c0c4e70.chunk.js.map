{"version":3,"sources":["webpack:///./src/App.tsx","webpack:///./src/index.tsx","webpack:///./src/components/GalleryContainer.tsx","webpack:///./src/components/Image.tsx","webpack:///./src/components/Navigation.tsx","webpack:///./src/components/LoadingBars.tsx","webpack:///./src/utils/dataFilterHelper.ts","webpack:///./src/components/useInfiniteScroll.tsx"],"names":["HomeLink","Link","to","NotFound","_","className","ErrorPage","ErrorBoundaryFallbackComponent","error","toString","history","createHistory","createHashSource","App","ErrorBoundary","FallbackComponent","LocationProvider","Router","Redirect","noThrow","from","path","default","ReactDOM","render","document","getElementById","subreddit","React","useState","data","setData","isLoading","setIsLoading","after","setAfter","isValidSubreddit","setIsValidSubreddit","lightboxIsOpen","setLightboxIsOpen","currentImage","setCurrentImage","isError","setIsError","validateSubreddit","useCallback","SUBREDDITS","find","sub","value","setIsFetchingMore","fetch","result","ok","Error","json","filteredData","children","prev","concat","useEffect","imageData","openLightbox","index","length","photos","renderImage","props","key","photo","onClick","ModalGateway","Modal","onClose","currentIndex","views","map","i","caption","title","src","url","imageStatus","setImageStatus","img","width","height","alt","imgContainerClass","loaded","onLoad","onError","label","NavLink","getProps","isCurrent","active","memo","option","type","color","res","filter","child","match","preview","item","dimension","resolutionLength","images","resolutions","urlOfLowerResolution","validLowerResUrl","replace","pick","callback","isFetchingMore","handleScroll","windowHeight","window","innerHeight","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","windowBottom","pageYOffset","addEventListener","removeEventListener"],"mappings":"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","file":"main~06837ae4.c7ae2ad5a0462c0c4e70.chunk.js","sourcesContent":["import { createHistory, Link, LocationProvider, Redirect, RouteComponentProps, Router } from \"@reach/router\"\nimport { createHashSource } from \"reach-router-hash-history\"\nimport * as React from \"react\"\nimport { ErrorBoundary, FallbackProps } from \"react-error-boundary\"\n\nimport GalleryContainer from \"./components/GalleryContainer\"\nimport \"./styles.scss\"\n\ntype Props = RouteComponentProps\n\nconst HomeLink = () => <Link to={\"/r/itookapicture\"}>Back to Photography</Link>\nexport const NotFound = (_: Props) => (\n  <div className=\"centered-container\">\n    <h1>The page you&apos;re looking for doesn&apos;t seem to exist 🦄</h1>\n    <HomeLink />\n  </div>\n)\n\nexport const ErrorPage = (_: Props) => (\n  <div className=\"centered-container\">\n    <h1>uh oh, something unexpected happened 🌈🦄</h1>\n    <HomeLink />\n  </div>\n)\n\nconst ErrorBoundaryFallbackComponent = ({ error }: FallbackProps) => (\n  <div className=\"centered-container\">\n    <h1>Oops, an error occurred!</h1>\n    <p>Here’s what we know…</p>\n    <p>\n      {error && error.toString()}\n    </p>\n    <HomeLink />\n  </div>\n)\n\nconst history = createHistory(createHashSource())\n\nexport const App = () => (\n  <ErrorBoundary FallbackComponent={ErrorBoundaryFallbackComponent}>\n    <LocationProvider history={history}>\n      <Router>\n        <Redirect noThrow={true} from=\"/\" to=\"r/itookapicture\" />\n        <GalleryContainer path=\"r/:subreddit\" />\n        <NotFound default={true} />\n      </Router>\n    </LocationProvider>\n  </ErrorBoundary>\n)\n","import * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\n\nimport { App } from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n","import { RouteComponentProps } from \"@reach/router\"\nimport * as React from \"react\"\nimport Gallery, { RenderImageProps, PhotoProps } from \"react-photo-gallery\"\nimport Carousel, { Modal, ModalGateway } from \"react-images\"\n\nimport Image from \"./Image\"\nimport Navigation, { SUBREDDITS } from \"./Navigation\"\nimport LoadingBars from \"./LoadingBars\"\nimport { ErrorPage, NotFound } from \"../App\"\n\nimport { filteredData } from \"../utils/dataFilterHelper\"\nimport useInfiniteScroll from \"./useInfiniteScroll\"\n\ntype Props = RouteComponentProps<{ readonly subreddit: string }>\ntype CustomPhotoProps = PhotoProps<{ title: string; url: string }>\n\nconst GalleryContainer = ({ subreddit }: Props) => {\n  const [data, setData] = React.useState<CustomPhotoProps[]>([])\n  const [isLoading, setIsLoading] = React.useState(false)\n  const [after, setAfter] = React.useState(\"\")\n  const [isValidSubreddit, setIsValidSubreddit] = React.useState(false)\n  const [lightboxIsOpen, setLightboxIsOpen] = React.useState(false)\n  const [currentImage, setCurrentImage] = React.useState(0)\n  const [isError, setIsError] = React.useState(false)\n\n  const validateSubreddit = React.useCallback(() => {\n    const isValidSubreddit = !!SUBREDDITS.find((sub) => sub.value === subreddit)\n    setIsValidSubreddit(isValidSubreddit)\n    return isValidSubreddit\n  }, [subreddit])\n\n  const { setIsFetchingMore } = useInfiniteScroll(async () => {\n    if (subreddit && validateSubreddit()) {\n      setIsFetchingMore(true)\n\n      try {\n        const result = await fetch(`https://www.reddit.com/r/${subreddit}.json?after=${after}`)\n        if (!result.ok) {\n          throw Error(\"fetch error\")\n        }\n        const json = await result.json()\n        setIsFetchingMore(false)\n        const imageData = filteredData(json.data.children)\n\n        setData((prev) => prev.concat(imageData))\n        setAfter(json.data.after)\n      } catch (_error) {\n        setIsError(true)\n      }\n    }\n  })\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      if (subreddit && validateSubreddit()) {\n        setIsLoading(true)\n        const result = await fetch(`https://www.reddit.com/r/${subreddit}.json`)\n        const json = await result.json()\n        setIsLoading(false)\n        const imageData = filteredData(json.data.children)\n\n        setData(imageData)\n        setAfter(json.data.after)\n      }\n    }\n    fetchData()\n  }, [subreddit, validateSubreddit])\n\n  const openLightbox = React.useCallback((index) => {\n    setLightboxIsOpen(true)\n    setCurrentImage(index)\n  }, [])\n\n  const closeLightbox = () => {\n    setLightboxIsOpen(false)\n  }\n\n  const renderImageComponent = (props: RenderImageProps) => {\n    return <Image key={props.index} photo={props.photo} index={props.index} onClick={openLightbox} />\n  }\n\n  if (isError) {\n    return <ErrorPage />\n  }\n\n  return (\n    <div className=\"gallery\">\n      <Navigation />\n      {isValidSubreddit ? (\n        <>\n          {isLoading && <LoadingBars />}\n          {!isLoading && data && data.length == 0 && (\n            <div className=\"centered-container\">\n              <h1>No photos yet 🏖️ </h1>\n            </div>\n          )}\n          {!isLoading && data && data.length > 0 && <Gallery photos={data} renderImage={renderImageComponent} />}\n        </>\n      ) : (\n        <NotFound />\n      )}\n      <ModalGateway>\n        {lightboxIsOpen ? (\n          <Modal onClose={closeLightbox}>\n            <Carousel\n              currentIndex={currentImage}\n              views={data.map((i: CustomPhotoProps) => ({\n                ...i,\n                caption: i.title,\n                src: i.url\n              }))}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n    </div>\n  )\n}\n\nexport default GalleryContainer\n","import classNames from \"classnames\"\nimport * as React from \"react\"\nimport { PhotoProps } from \"react-photo-gallery\"\n\nexport type PhotoType = Pick<\n  PhotoProps<{ title: string; url: string }>,\n  \"src\" | \"alt\" | \"title\" | \"width\" | \"height\" | \"url\"\n>\n\ninterface Props {\n  readonly index: number\n  readonly photo: PhotoProps\n  readonly onClick: (index: number) => void\n}\n\ntype ImageStatus = \"loading\" | \"loaded\" | \"error\"\n\nconst Image = ({ photo, index, onClick }: Props) => {\n  const [imageStatus, setImageStatus] = React.useState<ImageStatus>(\"loading\")\n\n  const img = photo as PhotoType\n  const { url, width, height, alt, title } = img\n\n  const imgContainerClass = classNames({\n    \"img-container\": true,\n    \"load-error\": imageStatus === \"error\",\n    loaded: imageStatus === \"loaded\"\n  })\n\n  const handleImageLoaded = () => {\n    setImageStatus(\"loaded\")\n  }\n\n  const handleImageError = () => {\n    setImageStatus(\"error\")\n  }\n\n  return (\n    <div className={imgContainerClass} onClick={() => onClick(index)}>\n      <div className=\"content\">\n        <img src={url} height={height} width={width} alt={alt} onLoad={handleImageLoaded} onError={handleImageError} />\n        <div className=\"content-details\">\n          <span>{title}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Image\n","import { Link } from \"@reach/router\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\n\ninterface Props {\n  readonly to: string\n  readonly children: React.ReactChild\n}\ninterface Option {\n  readonly value: string\n  readonly label: string\n}\n\nexport const SUBREDDITS: ReadonlyArray<Option> = [\n  { value: \"itookapicture\", label: \"Photography\" },\n  { value: \"pic\", label: \"General\" },\n  // { value: \"aww\", label: \"Aww\" },\n  { value: \"foodporn\", label: \"Food\" },\n  { value: \"DessertPorn\", label: \"Dessert\" },\n  { value: \"cityporn\", label: \"City\" },\n  { value: \"JapanPics\", label: \"Japan\" },\n  { value: \"EarthPorn\", label: \"Earth\" },\n  { value: \"lakeporn\", label: \"Lakes\" },\n  { value: \"RoomPorn\", label: \"Room\" },\n  { value: \"AbandonedPorn\", label: \"Abandoned\" },\n  { value: \"waterporn\", label: \"Water\" },\n  { value: \"WinterPorn\", label: \"Winter\" },\n  { value: \"ImaginaryLeviathans\", label: \"Art\" }\n]\n\nconst NavLink = (props: Props) => (\n  <Link\n    {...props}\n    getProps={({ isCurrent }) => {\n      return {\n        className: classNames({\n          active: isCurrent\n        })\n      }\n    }}\n  />\n)\n\nconst Navigation = () => {\n  return (\n    <nav className=\"nav-subreddit\">\n      <ul>\n        {SUBREDDITS.map((option) => (\n          <li key={option.value}>\n            <NavLink data-testid={option.value} to={`/r/${option.value}`}>\n              {option.label}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  )\n}\n\nexport default React.memo(Navigation)\n","import * as React from \"react\"\nimport ReactLoading from \"react-loading\"\n\nconst LoadingBars = () => {\n  return (\n    <div className=\"loading-container\">\n      <ReactLoading type=\"bars\" color=\"#b9c8d0\" />\n    </div>\n  )\n}\n\nexport default LoadingBars\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { pick } from \"lodash-es\"\nimport { ImageData } from \"../services/useRedditApi\"\n\nexport const filteredData = (res: any) => {\n  const dataWithImages = res.filter(\n    (child: any) => child.data.url.match(/\\.(jpeg|jpg|gif|png)$/) != null && !!child.data.preview\n  )\n\n  const imageData: ImageData[] = dataWithImages.map(\n    (item: any): ImageData => {\n      let dimension = { height: 0, width: 0 }\n      const resolutionLength = item.data.preview.images[0].resolutions.length\n      let urlOfLowerResolution = \"\"\n\n      if (item.data.preview.images[0].resolutions.length > 4) {\n        dimension = {\n          height: item.data.preview.images[0].resolutions[3].height,\n          width: item.data.preview.images[0].resolutions[3].width\n        }\n        urlOfLowerResolution = item.data.preview.images[0].resolutions[3].url\n      } else {\n        dimension = {\n          height: item.data.preview.images[0].resolutions[resolutionLength - 1].height,\n          width: item.data.preview.images[0].resolutions[resolutionLength - 1].width\n        }\n        urlOfLowerResolution = item.data.preview.images[0].resolutions[resolutionLength - 1].url\n      }\n\n      const regex = /amp;/g\n      const validLowerResUrl = urlOfLowerResolution.replace(regex, \"\")\n\n      return {\n        ...pick(item.data, \"name\", \"title\"),\n        height: dimension.height,\n        url: item.data.url,\n        src: validLowerResUrl,\n        width: dimension.width\n      }\n    }\n  )\n\n  return imageData\n}\n","import { useState, useEffect } from \"react\"\n\nconst useInfiniteScroll = (callback: () => void) => {\n  const [isFetchingMore, setIsFetchingMore] = useState(false)\n  const OFFSET_FROM_BOTTOM = 500\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight\n      const body = document.body\n      const html = document.documentElement\n      const docHeight = Math.max(\n        body.scrollHeight,\n        body.offsetHeight,\n        html.clientHeight,\n        html.scrollHeight,\n        html.offsetHeight\n      )\n      const windowBottom = windowHeight + window.pageYOffset + OFFSET_FROM_BOTTOM\n      if (windowBottom >= docHeight) {\n        setIsFetchingMore(true)\n      } else {\n        setIsFetchingMore(false)\n      }\n    }\n    window.addEventListener(\"scroll\", handleScroll)\n    return () => window.removeEventListener(\"scroll\", handleScroll)\n  }, [isFetchingMore])\n\n  useEffect(() => {\n    if (!isFetchingMore) return\n    callback()\n  }, [callback, isFetchingMore])\n\n  return { isFetchingMore, setIsFetchingMore }\n}\n\nexport default useInfiniteScroll\n"],"sourceRoot":""}